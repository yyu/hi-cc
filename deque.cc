#include <iostream>
#include <deque>

const char * comments[] = {"",
                           "deque is similar to vector, the following is worth reading:",
                           "",
                           "<From Herb Sutter's article @ http://www.gotw.ca/gotw/054.htm>",
                           "",
                           "The C++ Standard, in section 23.1.1, offers some advice on which containers to prefer. It says:",
                           "	vector is the type of sequence that should be used by default...",
                           "        deque is the data structure of choice when most insertions and deletions take place",
                           "        at the beginning or at the end of the sequence.",
                           "",
                           "I'd like to present an amiably dissenting point of view:",
                           "	I recommend that you consider preferring deque by default instead of vector,",
                           "        especially when the contained type is a class or struct and not a builtin type,",
                           "        unless you really need the container's memory to be contiguous.",
                           "",
                           "vector and deque offer nearly identical interfaces and are generally interchangeable.",
                           "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                           "	- deque also offers push_front() and pop_front(), which vector does not.",
                           "        - vector offers capacity() and reserve(), which deque does not,",
                           "          but that's no loss -- those functions are actually a weakness of vector, as I'll demonstrate in a moment.",
                           "",
                           "The main structural difference between vector and deque lies in the way the two containers organize their internal storage:",
                           "        - Under the covers, a deque allocates its storage in pages, or \"chunks,\"",
                           "                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                           "          with a fixed number of contained elements in each page;",
                           "          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                           "          this why a deque is often compared to (and pronounced as) a \"deck\" of cards,",
                           "          although its name originally came from \"double-ended queue\" because of",
                           "          its ability to insert elements efficiently at either end of the sequence.",
                           "        - On the other hand, a vector allocates a contiguous block of memory,",
                           "                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                           "          and can only insert elements efficiently at the end of the sequence.",
                           "",
                           "The paged organization of a deque offers significant benefits:",
                           "        1. A deque offers constant-time insert() and erase() operations at the front of the container,",
                           "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                           "           whereas a vector does not -- hence the note in the Standard about using a deque if you need",
                           "           ^^^^^^^^^^^^^^^^^^^^^^^^^",
                           "           to insert or erase at both ends of the sequence.",
                           "",
                           "        2. A deque uses memory in a more operating system-friendly way, particularly on systems without virtual memory.",
                           "           For example, a 10-megabyte vector uses a single 10-megabyte block of memory, which is usually less efficient",
                           "           in practice than a 10-megabyte deque that can fit in a series of smaller blocks of memory.",
                           "",
                           "        3. A deque is easier to use, and inherently more efficient for growth, than a vector.",
                           "           The only operations supplied by vector that deque doesn't have are capacity() and reserve() -- and",
                           "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                           "           that's because deque doesn't need them!",
                           "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                           "           - For vector, calling reserve() before a large number of push_back()s can eliminate reallocating ever-larger",
                           "             versions of the same buffer every time it finds out that the current one isn't big enough after all.",
                           "           - A deque has no such problem, and having a deque::reserve() before a large number of push_back()s would not",
                           "             eliminate any allocations (or any other work) because none of the allocations are redundant;",
                           "             the deque has to allocate the same number of extra pages whether it does it all at once or as elements are",
                           "             actually appended.",
                           "",
                           "Interestingly, the Standard stack adapter, which can only grow in one direction and so never needs insertion in the middle",
                           "or at the other end, has its default implementation as a deque:",
                           "        template <class T, class Container = deque<T> >",
                           "        class stack {",
                           "                // ...",
                           "        };",
                           "",
                           "See:",
                           "        - vector.cc",
                           "        - http://www.cplusplus.com/reference/stl/vector/",
                           "        - http://www.cplusplus.com/reference/stl/deque/",
                           ""};

int main(int argc, char * argv[])
{
        int number_of_lines = sizeof(comments) / sizeof(comments[0]);

        for (int i = 0; i < number_of_lines; ++i)
                std::cout << comments[i] << "\n";

        return 0;
}
